library(readr)
full_grouped <- read_csv("full_grouped.csv")
View(full_grouped)
library(readr)
# Replace 'full_grouped.csv' with the actual name of your CSV file
full_grouped <- read_csv("full_grouped.csv")
# Use spec() to retrieve the full column specification
spec(full_grouped)
# Check for missing values
summary(full_grouped)
# Convert the "Date" column to the correct date format
full_grouped$Date <- as.Date(full_grouped$Date, format = "dd-mm-yyyy")
# Convert the "Date" column to the correct date format
as.Date(dd.mm.yyyy)
> as.Date(full_grouped$Date, format = "your_date_format")
as.Date(full_grouped$Date, format = "dd-mm-yyyy")
# Check for missing values in each column
colSums(is.na(full_grouped))
# Set negative values in the "Active" column to 0
full_grouped$Active[full_grouped$Active < 0] <- 0
# Ensure the "WHO Region" column is of the correct data type
class(full_grouped$`WHO Region`)
# full_grouped$your_date_column <- as.Date(full_grouped$your_date_column, format = "%d/%m/%Y")
# full_grouped$date <- as.Date(full_grouped$date, format = "%d/%m/%Y")
> # full_grouped$date_column <- as.Date(full_grouped$date_column, format = "%d/%m/%Y")
# full_grouped$date_column <- as.Date(full_grouped$date_column, format = "%d/%m/%Y")
colSums(is.na(full_grouped))
View(full_grouped)
colSums(is.na(full_grouped))
library(readxl)
full_grouped <- read_excel("full_grouped.xlsx")
View(full_grouped)
colSums(is.na(full_grouped))
# Impute missing values in numeric columns with the mean
full_grouped$Active[is.na(full_grouped$Active)] <- mean(full_grouped$Active, na.rm = TRUE)
> colSums(is.na(full_grouped))
colSums(is.na(full_grouped))
# Impute missing values in numeric columns with the mean
> full_grouped$`New cases`[is.na(full_grouped$`New cases`)] <- mean(full_grouped$`New cases`, na.rm = TRUE)
full_grouped$`New cases`[is.na(full_grouped$`New cases`)] <- mean(full_grouped$`New cases`, na.rm = TRUE)
full_grouped$`New deaths`[is.na(full_grouped$`New deaths`)] <- mean(full_grouped$`New deaths`, na.rm = TRUE)
full_grouped$`New recovered`[is.na(full_grouped$`New recovered`)] <- mean(full_grouped$`New recovered`, na.rm = TRUE)
full_grouped$`Recovered`[is.na(full_grouped$`Recovered`)] <- mean(full_grouped$` Recovered`, na.rm = TRUE)
full_grouped$`Recovered`[is.na(full_grouped$`Recovered`)] <- mean(full_grouped$`Recovered`, na.rm = TRUE)
colSums(is.na(full_grouped))
# Assuming your current date format is "%Y-%m-%d"
# Replace 'date' with the actual name of your date column
full_grouped$Date <- as.Date(full_grouped$Date, format = "%Y-%m-%d")
full_grouped$Date <- as.Date(full_grouped$Date, format = "%d-%m-%Y")
# Install and load the dplyr package if not already installed
# install.packages("dplyr")
library(dplyr)
full_grouped <- full_grouped %>% select(`New recovered`)
str(full_grouped)
library(readxl)
full_grouped <- read_excel("full_grouped.xlsx")
View(full_grouped)
full_grouped <- read_csv("full_grouped.csv")
library(readr)
full_grouped <- read_csv("full_grouped.csv")
View(full_grouped)
full_grouped <- read_csv("full_grouped.csv")
spec(full_grouped)
summary(full_grouped)
colSums(is.na(full_grouped))
full_grouped$Active[is.na(full_grouped$Active)] <- mean(full_grouped$Active, na.rm = TRUE)
> colSums(is.na(full_grouped))
colSums(is.na(full_grouped))
# Impute missing values in numeric columns with the mean
full_grouped$`New cases`[is.na(full_grouped$`New cases`)] <- mean(full_grouped$`New cases`, na.rm = TRUE)
full_grouped$`New deaths`[is.na(full_grouped$`New deaths`)] <- mean(full_grouped$`New deaths`, na.rm = TRUE)
full_grouped$`New recovered`[is.na(full_grouped$`New recovered`)] <- mean(full_grouped$`New recovered`, na.rm = TRUE)
full_grouped$`Recovered`[is.na(full_grouped$`Recovered`)] <- mean(full_grouped$`Recovered`, na.rm = TRUE)
colSums(is.na(full_grouped))
getwd()
renv::activate()
renv::status()
summary(full_grouped)
library(shiny)
install.packages("shiny")
library(shiny)
library(dplyr)
library(ggplot2)
date <- seq(as.Date("2022-01-01"), as.Date("2022-01-10"), by = "days")
deaths <- c(10, 15, 20, 25, 30, 35, 40, 45, 50, 55)
# Create a line plot
plot(date, deaths, type = "l", col = "blue", lwd = 2,
main = "Line Plot of Deaths Over Time",
xlab = "Date",
ylab = "Number of Deaths")
shiny::runApp('datavisualization')
